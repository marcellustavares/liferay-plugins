/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.dynamicstorage.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity;
import com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntityModel;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DynamicStorageAppEntity service. Represents a row in the &quot;DynamicStorageAppEntity&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntityModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DynamicStorageAppEntityImpl}.
 * </p>
 *
 * @author Marcellus Tavares
 * @see DynamicStorageAppEntityImpl
 * @see com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity
 * @see com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntityModel
 * @generated
 */
@ProviderType
public class DynamicStorageAppEntityModelImpl extends BaseModelImpl<DynamicStorageAppEntity>
	implements DynamicStorageAppEntityModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dynamic storage app entity model instance should use the {@link com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity} interface instead.
	 */
	public static final String TABLE_NAME = "DynamicStorageAppEntity";
	public static final Object[][] TABLE_COLUMNS = {
			{ "appEntityId", Types.BIGINT },
			{ "appId", Types.BIGINT },
			{ "entityName", Types.VARCHAR },
			{ "DDMStructureId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table DynamicStorageAppEntity (appEntityId LONG not null primary key,appId LONG,entityName VARCHAR(75) null,DDMStructureId LONG)";
	public static final String TABLE_SQL_DROP = "drop table DynamicStorageAppEntity";
	public static final String ORDER_BY_JPQL = " ORDER BY dynamicStorageAppEntity.appEntityId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DynamicStorageAppEntity.appEntityId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity"),
			true);
	public static final long APPID_COLUMN_BITMASK = 1L;
	public static final long ENTITYNAME_COLUMN_BITMASK = 2L;
	public static final long APPENTITYID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity"));

	public DynamicStorageAppEntityModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _appEntityId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAppEntityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _appEntityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DynamicStorageAppEntity.class;
	}

	@Override
	public String getModelClassName() {
		return DynamicStorageAppEntity.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("appEntityId", getAppEntityId());
		attributes.put("appId", getAppId());
		attributes.put("entityName", getEntityName());
		attributes.put("DDMStructureId", getDDMStructureId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long appEntityId = (Long)attributes.get("appEntityId");

		if (appEntityId != null) {
			setAppEntityId(appEntityId);
		}

		Long appId = (Long)attributes.get("appId");

		if (appId != null) {
			setAppId(appId);
		}

		String entityName = (String)attributes.get("entityName");

		if (entityName != null) {
			setEntityName(entityName);
		}

		Long DDMStructureId = (Long)attributes.get("DDMStructureId");

		if (DDMStructureId != null) {
			setDDMStructureId(DDMStructureId);
		}
	}

	@Override
	public long getAppEntityId() {
		return _appEntityId;
	}

	@Override
	public void setAppEntityId(long appEntityId) {
		_appEntityId = appEntityId;
	}

	@Override
	public long getAppId() {
		return _appId;
	}

	@Override
	public void setAppId(long appId) {
		_columnBitmask |= APPID_COLUMN_BITMASK;

		if (!_setOriginalAppId) {
			_setOriginalAppId = true;

			_originalAppId = _appId;
		}

		_appId = appId;
	}

	public long getOriginalAppId() {
		return _originalAppId;
	}

	@Override
	public String getEntityName() {
		if (_entityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _entityName;
		}
	}

	@Override
	public void setEntityName(String entityName) {
		_columnBitmask |= ENTITYNAME_COLUMN_BITMASK;

		if (_originalEntityName == null) {
			_originalEntityName = _entityName;
		}

		_entityName = entityName;
	}

	public String getOriginalEntityName() {
		return GetterUtil.getString(_originalEntityName);
	}

	@Override
	public long getDDMStructureId() {
		return _DDMStructureId;
	}

	@Override
	public void setDDMStructureId(long DDMStructureId) {
		_DDMStructureId = DDMStructureId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			DynamicStorageAppEntity.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DynamicStorageAppEntity toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DynamicStorageAppEntity)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DynamicStorageAppEntityImpl dynamicStorageAppEntityImpl = new DynamicStorageAppEntityImpl();

		dynamicStorageAppEntityImpl.setAppEntityId(getAppEntityId());
		dynamicStorageAppEntityImpl.setAppId(getAppId());
		dynamicStorageAppEntityImpl.setEntityName(getEntityName());
		dynamicStorageAppEntityImpl.setDDMStructureId(getDDMStructureId());

		dynamicStorageAppEntityImpl.resetOriginalValues();

		return dynamicStorageAppEntityImpl;
	}

	@Override
	public int compareTo(DynamicStorageAppEntity dynamicStorageAppEntity) {
		long primaryKey = dynamicStorageAppEntity.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DynamicStorageAppEntity)) {
			return false;
		}

		DynamicStorageAppEntity dynamicStorageAppEntity = (DynamicStorageAppEntity)obj;

		long primaryKey = dynamicStorageAppEntity.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DynamicStorageAppEntityModelImpl dynamicStorageAppEntityModelImpl = this;

		dynamicStorageAppEntityModelImpl._originalAppId = dynamicStorageAppEntityModelImpl._appId;

		dynamicStorageAppEntityModelImpl._setOriginalAppId = false;

		dynamicStorageAppEntityModelImpl._originalEntityName = dynamicStorageAppEntityModelImpl._entityName;

		dynamicStorageAppEntityModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DynamicStorageAppEntity> toCacheModel() {
		DynamicStorageAppEntityCacheModel dynamicStorageAppEntityCacheModel = new DynamicStorageAppEntityCacheModel();

		dynamicStorageAppEntityCacheModel.appEntityId = getAppEntityId();

		dynamicStorageAppEntityCacheModel.appId = getAppId();

		dynamicStorageAppEntityCacheModel.entityName = getEntityName();

		String entityName = dynamicStorageAppEntityCacheModel.entityName;

		if ((entityName != null) && (entityName.length() == 0)) {
			dynamicStorageAppEntityCacheModel.entityName = null;
		}

		dynamicStorageAppEntityCacheModel.DDMStructureId = getDDMStructureId();

		return dynamicStorageAppEntityCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{appEntityId=");
		sb.append(getAppEntityId());
		sb.append(", appId=");
		sb.append(getAppId());
		sb.append(", entityName=");
		sb.append(getEntityName());
		sb.append(", DDMStructureId=");
		sb.append(getDDMStructureId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append(
			"com.liferay.portal.dynamicstorage.model.DynamicStorageAppEntity");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>appEntityId</column-name><column-value><![CDATA[");
		sb.append(getAppEntityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appId</column-name><column-value><![CDATA[");
		sb.append(getAppId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityName</column-name><column-value><![CDATA[");
		sb.append(getEntityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DDMStructureId</column-name><column-value><![CDATA[");
		sb.append(getDDMStructureId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = DynamicStorageAppEntity.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			DynamicStorageAppEntity.class
		};
	private long _appEntityId;
	private long _appId;
	private long _originalAppId;
	private boolean _setOriginalAppId;
	private String _entityName;
	private String _originalEntityName;
	private long _DDMStructureId;
	private long _columnBitmask;
	private DynamicStorageAppEntity _escapedModel;
}