/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.dynamicstorage.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalService;
import com.liferay.portal.dynamicstorage.service.persistence.DynamicStorageAppEntityPersistence;
import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBFactoryUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.InfrastructureUtil;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.persistence.ClassNamePersistence;
import com.liferay.portal.service.persistence.UserPersistence;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructurePersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the dynamic storage registry local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.portal.dynamicstorage.service.impl.DynamicStorageRegistryLocalServiceImpl}.
 * </p>
 *
 * @author Marcellus Tavares
 * @see com.liferay.portal.dynamicstorage.service.impl.DynamicStorageRegistryLocalServiceImpl
 * @see com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class DynamicStorageRegistryLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements DynamicStorageRegistryLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalServiceUtil} to access the dynamic storage registry local service.
	 */

	/**
	 * Returns the dynamic storage app entity local service.
	 *
	 * @return the dynamic storage app entity local service
	 */
	public com.liferay.portal.dynamicstorage.service.DynamicStorageAppEntityLocalService getDynamicStorageAppEntityLocalService() {
		return dynamicStorageAppEntityLocalService;
	}

	/**
	 * Sets the dynamic storage app entity local service.
	 *
	 * @param dynamicStorageAppEntityLocalService the dynamic storage app entity local service
	 */
	public void setDynamicStorageAppEntityLocalService(
		com.liferay.portal.dynamicstorage.service.DynamicStorageAppEntityLocalService dynamicStorageAppEntityLocalService) {
		this.dynamicStorageAppEntityLocalService = dynamicStorageAppEntityLocalService;
	}

	/**
	 * Returns the dynamic storage app entity persistence.
	 *
	 * @return the dynamic storage app entity persistence
	 */
	public DynamicStorageAppEntityPersistence getDynamicStorageAppEntityPersistence() {
		return dynamicStorageAppEntityPersistence;
	}

	/**
	 * Sets the dynamic storage app entity persistence.
	 *
	 * @param dynamicStorageAppEntityPersistence the dynamic storage app entity persistence
	 */
	public void setDynamicStorageAppEntityPersistence(
		DynamicStorageAppEntityPersistence dynamicStorageAppEntityPersistence) {
		this.dynamicStorageAppEntityPersistence = dynamicStorageAppEntityPersistence;
	}

	/**
	 * Returns the dynamic storage persistence local service.
	 *
	 * @return the dynamic storage persistence local service
	 */
	public com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceLocalService getDynamicStoragePersistenceLocalService() {
		return dynamicStoragePersistenceLocalService;
	}

	/**
	 * Sets the dynamic storage persistence local service.
	 *
	 * @param dynamicStoragePersistenceLocalService the dynamic storage persistence local service
	 */
	public void setDynamicStoragePersistenceLocalService(
		com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceLocalService dynamicStoragePersistenceLocalService) {
		this.dynamicStoragePersistenceLocalService = dynamicStoragePersistenceLocalService;
	}

	/**
	 * Returns the dynamic storage persistence remote service.
	 *
	 * @return the dynamic storage persistence remote service
	 */
	public com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceService getDynamicStoragePersistenceService() {
		return dynamicStoragePersistenceService;
	}

	/**
	 * Sets the dynamic storage persistence remote service.
	 *
	 * @param dynamicStoragePersistenceService the dynamic storage persistence remote service
	 */
	public void setDynamicStoragePersistenceService(
		com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceService dynamicStoragePersistenceService) {
		this.dynamicStoragePersistenceService = dynamicStoragePersistenceService;
	}

	/**
	 * Returns the dynamic storage registry local service.
	 *
	 * @return the dynamic storage registry local service
	 */
	public com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalService getDynamicStorageRegistryLocalService() {
		return dynamicStorageRegistryLocalService;
	}

	/**
	 * Sets the dynamic storage registry local service.
	 *
	 * @param dynamicStorageRegistryLocalService the dynamic storage registry local service
	 */
	public void setDynamicStorageRegistryLocalService(
		com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalService dynamicStorageRegistryLocalService) {
		this.dynamicStorageRegistryLocalService = dynamicStorageRegistryLocalService;
	}

	/**
	 * Returns the dynamic storage registry remote service.
	 *
	 * @return the dynamic storage registry remote service
	 */
	public com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryService getDynamicStorageRegistryService() {
		return dynamicStorageRegistryService;
	}

	/**
	 * Sets the dynamic storage registry remote service.
	 *
	 * @param dynamicStorageRegistryService the dynamic storage registry remote service
	 */
	public void setDynamicStorageRegistryService(
		com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryService dynamicStorageRegistryService) {
		this.dynamicStorageRegistryService = dynamicStorageRegistryService;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the d d m structure local service.
	 *
	 * @return the d d m structure local service
	 */
	public com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService getDDMStructureLocalService() {
		return ddmStructureLocalService;
	}

	/**
	 * Sets the d d m structure local service.
	 *
	 * @param ddmStructureLocalService the d d m structure local service
	 */
	public void setDDMStructureLocalService(
		com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService ddmStructureLocalService) {
		this.ddmStructureLocalService = ddmStructureLocalService;
	}

	/**
	 * Returns the d d m structure remote service.
	 *
	 * @return the d d m structure remote service
	 */
	public com.liferay.portlet.dynamicdatamapping.service.DDMStructureService getDDMStructureService() {
		return ddmStructureService;
	}

	/**
	 * Sets the d d m structure remote service.
	 *
	 * @param ddmStructureService the d d m structure remote service
	 */
	public void setDDMStructureService(
		com.liferay.portlet.dynamicdatamapping.service.DDMStructureService ddmStructureService) {
		this.ddmStructureService = ddmStructureService;
	}

	/**
	 * Returns the d d m structure persistence.
	 *
	 * @return the d d m structure persistence
	 */
	public DDMStructurePersistence getDDMStructurePersistence() {
		return ddmStructurePersistence;
	}

	/**
	 * Sets the d d m structure persistence.
	 *
	 * @param ddmStructurePersistence the d d m structure persistence
	 */
	public void setDDMStructurePersistence(
		DDMStructurePersistence ddmStructurePersistence) {
		this.ddmStructurePersistence = ddmStructurePersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = InfrastructureUtil.getDataSource();

			DB db = DBFactoryUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.portal.dynamicstorage.service.DynamicStorageAppEntityLocalService.class)
	protected com.liferay.portal.dynamicstorage.service.DynamicStorageAppEntityLocalService dynamicStorageAppEntityLocalService;
	@BeanReference(type = DynamicStorageAppEntityPersistence.class)
	protected DynamicStorageAppEntityPersistence dynamicStorageAppEntityPersistence;
	@BeanReference(type = com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceLocalService.class)
	protected com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceLocalService dynamicStoragePersistenceLocalService;
	@BeanReference(type = com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceService.class)
	protected com.liferay.portal.dynamicstorage.service.DynamicStoragePersistenceService dynamicStoragePersistenceService;
	@BeanReference(type = com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalService.class)
	protected com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryLocalService dynamicStorageRegistryLocalService;
	@BeanReference(type = com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryService.class)
	protected com.liferay.portal.dynamicstorage.service.DynamicStorageRegistryService dynamicStorageRegistryService;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ClassNameLocalService.class)
	protected com.liferay.portal.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.service.ClassNameService.class)
	protected com.liferay.portal.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService.class)
	protected com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService ddmStructureLocalService;
	@BeanReference(type = com.liferay.portlet.dynamicdatamapping.service.DDMStructureService.class)
	protected com.liferay.portlet.dynamicdatamapping.service.DDMStructureService ddmStructureService;
	@BeanReference(type = DDMStructurePersistence.class)
	protected DDMStructurePersistence ddmStructurePersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private DynamicStorageRegistryLocalServiceClpInvoker _clpInvoker = new DynamicStorageRegistryLocalServiceClpInvoker();
}